/*
 * api de eventos
 * Api utilizada no projeto final de disciplina do curso de ADS no IFPI
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Cadastrar Atividade
     *
     * Recebe uma response de atividade
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void atividadeCadastrarPostTest() throws ApiException {
        String nome = null;
        String termino = null;
        Integer valor = null;
        Integer tipoAtividade = null;
        Integer evento = null;
        api.atividadeCadastrarPost(nome, termino, valor, tipoAtividade, evento);

        // TODO: test validations
    }
    
    /**
     * Retorna uma lista de atividades.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void atividadeListarGetTest() throws ApiException {
        api.atividadeListarGet();

        // TODO: test validations
    }
    
    /**
     * Retorna uma lista dos tipos de atividades.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void atividadeListarTiposGetTest() throws ApiException {
        api.atividadeListarTiposGet();

        // TODO: test validations
    }
    
    /**
     * Cadastra Usuário
     *
     * Recebe uma response de usuário
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usuarioCadastrarPostTest() throws ApiException {
        String nome = null;
        String email = null;
        String password = null;
        Integer evento = null;
        api.usuarioCadastrarPost(nome, email, password, evento);

        // TODO: test validations
    }
    
    /**
     * Retorna uma usuário baseado no email.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usuarioEmailGetTest() throws ApiException {
        String email = null;
        api.usuarioEmailGet(email);

        // TODO: test validations
    }
    
    /**
     * Retorna uma lista com as inscrições do usuario.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usuarioIdMinhasInscricoesGetTest() throws ApiException {
        String id = null;
        api.usuarioIdMinhasInscricoesGet(id);

        // TODO: test validations
    }
    
    /**
     * Retorna uma lista de usuário.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usuarioListarGetTest() throws ApiException {
        api.usuarioListarGet();

        // TODO: test validations
    }
    
    /**
     * Logar Usuário
     *
     * Recebe uma response de usuário
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usuarioLoginPostTest() throws ApiException {
        String email = null;
        String password = null;
        api.usuarioLoginPost(email, password);

        // TODO: test validations
    }
    
}
